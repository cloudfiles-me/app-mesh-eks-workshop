---
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  labels:
    mesh: dj-app
    gateway: ingress-gw
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: ingress-gw
  namespace: prod
spec:
  namespaceSelector:
    matchLabels:
      gateway: ingress-gw
  podSelector:
    matchLabels:
      app: ingress-gw
  listeners:
    - portMapping:
        port: 8088
        protocol: http
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: gateway-route-default
  namespace: prod
spec:
  httpRoute:
    match:
      prefix: "/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: dj
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: dj
  namespace: prod
spec:
  awsName: dj-svc.prod.svc.cluster.local
  provider:
    # virtualNode:
    #   virtualNodeRef:
    #     name: dj
    virtualRouter:
      virtualRouterRef:
        name: dj-router
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: dj-router
  namespace: prod
spec:
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  routes:
    - name: dj-route-root
      httpRoute:
        match:
          prefix: "/"
        action:
          weightedTargets:
            - virtualNodeRef:
                name: dj
              weight: 100
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: dj
  namespace: prod
spec:
  podSelector:
    matchLabels:
      app: dj
      version: ingress
  listeners:
    - portMapping:
        port: 9080
        protocol: http
      healthCheck:
        protocol: http
        path: "/ping"
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  backends:
    - virtualService:
        virtualServiceRef:
          name: jazz
    - virtualService:
        virtualServiceRef:
          name: metal
  serviceDiscovery:
    dns:
      hostname: dj.prod.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dj
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dj
      version: ingress
  template:
    metadata:
      labels:
        app: dj
        version: ingress
    spec:
      containers:
        - name: dj
          image: "jorgehrn/dj-app:ingress"
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
          env:
            - name: "SVC_JAZZ_ADDR"
              valueFrom:
                configMapKeyRef:
                  name: dj-app
                  key: jazz_svc_addr
            - name: "SVC_METAL_ADDR"
              valueFrom:
                configMapKeyRef:
                  name: dj-app
                  key: metal_svc_addr
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dj-app
  namespace: prod
  labels:
    app: dj
data:
  metal_svc_addr: |
    http://metal.prod.svc.cluster.local:9080
  jazz_svc_addr: |
    http://jazz.prod.svc.cluster.local:9080
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-gw
  namespace: prod
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8088
      name: http
  selector:
    app: ingress-gw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-gw
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-gw
  template:
    metadata:
      labels:
        app: ingress-gw
    spec:
      containers:
        - name: envoy
          image: 840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.12.5.0-prod
          ports:
            - containerPort: 8088
